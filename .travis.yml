language: generic

sudo: required

# 도커 환경 만들기
services:
  - docker

# 이미지 생성하기
before_install:
  - docker build -t alstjrchl97/docker-front -f ./frontend/Dockerfile.dev ./frontend

# 하나 하나의 프로젝트 테스트 실행하기
script:
  - docker run -e CI=true alstjrchl97/docker-front npm run test

# 테스트 성공

# 운영 환경 이미지로 만들기 (Dockerfile 이므로, 경로 설정 필요없음.)
after_success:
  - docker build -t alstjrchl97/docker-frontend ./frontend
  - docker build -t alstjrchl97/docker-backend ./backend
  - docker build -t alstjrchl97/docker-nginx ./nginx

# 도커 허브 로그인
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin

# 빌드 된 이미지 도커 허브에 PUSH 하기
  - docker push alstjrchl97/docker-frontend
  - docker push alstjrchl97/docker-backend
  - docker push alstjrchl97/docker-nginx


# -------- Deploy 부분 ----------

deploy:
  #외부 서비스 표시 (s3, elasticbeanstalk, firebase 등)
  provider: elasticbeanstalk
  # 사용하고 있는 AWS의 서비스의 물리적 장소
  region: "us-east-1"
  # APP 이름
  app: "docker-fullstack-app"
  # env 이름
  env: "Dockerfullstackapp-env"
  bucket_name: elasticbeanstalk-us-east-1-053195428231
  bucket_path: "docker-fullstack-app"
  on: #main 브랜치 푸시에만 배포가 이루어지도록.
    branch: main
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY